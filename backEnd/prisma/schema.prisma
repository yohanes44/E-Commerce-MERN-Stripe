generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:@localhost:3306/ecommerceapi"
}

model address {
  id          Int    @id @default(autoincrement())
  userId      Int
  phoneNumber Int
  city        String @db.VarChar(255)
  sub_city    String @db.VarChar(255)
  user        user   @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Address_userId_fkey")

  @@index([userId], map: "Address_userId_fkey")
}

model cart {
  id               Int              @id @default(autoincrement())
  productId        Int
  variationId      Int
  userId           Int
  orderId          Int?
  state            String           @db.VarChar(255)
  quantity         Int
  order            order?           @relation(fields: [orderId], references: [id], map: "Cart_orderId_fkey")
  product          product          @relation(fields: [productId], references: [id], map: "Cart_productId_fkey")
  user             user             @relation(fields: [userId], references: [id], map: "Cart_userId_fkey")
  productvariation productvariation @relation(fields: [variationId], references: [id], map: "Cart_variationId_fkey")

  @@index([orderId], map: "Cart_orderId_fkey")
  @@index([productId], map: "Cart_productId_fkey")
  @@index([userId], map: "Cart_userId_fkey")
  @@index([variationId], map: "Cart_variationId_fkey")
}

model category {
  id      Int       @id @default(autoincrement())
  name    String    @db.VarChar(255)
  img     String    @db.VarChar(255)
  product product[]
}

model order {
  id     Int    @id @default(autoincrement())
  state  String @db.VarChar(255)
  userId Int
  total  Int
  cart   cart[]
  user   user   @relation(fields: [userId], references: [id], map: "Order_userId_fkey")

  @@index([userId], map: "Order_userId_fkey")
}

model product {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  desc             String             @db.VarChar(255)
  img              String             @db.VarChar(255)
  brand            String             @db.VarChar(255)
  categoryId       Int
  price            Int
  isActive         Boolean            @default(true)
  cart             cart[]
  category         category           @relation(fields: [categoryId], references: [id], map: "Product_categoryId_fkey")
  productvariation productvariation[]

  @@index([categoryId], map: "Product_categoryId_fkey")
}

model productvariation {
  id        Int     @id @default(autoincrement())
  color     String? @db.VarChar(255)
  img       String? @db.VarChar(255)
  size      String? @db.VarChar(255)
  quantity  Int
  productId Int
  cart      cart[]
  product   product @relation(fields: [productId], references: [id], map: "ProductVariation_productId_fkey")

  @@index([productId], map: "ProductVariation_productId_fkey")
}

model role {
  id        Int         @id @default(autoincrement())
  name      String      @db.VarChar(255)
  user_role user_role[]
}

model user {
  id        Int         @id @default(autoincrement())
  firstName String      @db.VarChar(255)
  lastName  String      @db.VarChar(255)
  password  String      @db.VarChar(255)
  createdAt DateTime    @default(now())
  updatedAt DateTime
  email     String
  address   address[]
  cart      cart[]
  order     order[]
  user_role user_role[]
}

model user_role {
  id     Int  @id @default(autoincrement())
  userId Int
  roleId Int
  role   role @relation(fields: [roleId], references: [id], map: "User_role_roleId_fkey")
  user   user @relation(fields: [userId], references: [id], onDelete: Cascade, map: "User_role_userId_fkey")

  @@index([roleId], map: "User_role_roleId_fkey")
  @@index([userId], map: "User_role_userId_fkey")
}
